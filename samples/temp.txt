info

only let people onboard 1.1.0 data

remove deprecsated attributes?

prevent users from adding in values that deviate from schema (make schemas strictly attributed)

add regex to enforce strict typing
numbers are equal to floats
integers can work with 64 and 32 bit preceision

exclude attributes/objects if not relevant profile is applied 
    "if": {
        "properties": {
            "metadata": {
                "type": "object",
                "properties": {
                    "profiles": {
                        "type": "array",
                        "contains": {
                            "enum": ["action_id"]
                        }
                    }
                }
            }
        }
    },
    "then": {
        "required": ["action_id"]
    },
    "if": {
        "properties": {
            "metadata": {
                "type": "object",
                "properties": {
                    "profiles": {
                        "type": "array",
                        "contains": {
                            "enum": ["cloud"]
                        }
                    }
                }
            }
        }
    },
    "then": {
        "required": ["cloud"]
    },
    "required": [],
    "title": "DNS Activity",
    "type": "object"



port
"pattern": "^([1-9]|[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"

hostname/url
"pattern": "^(https?|HTTPS?):?\\/\\/[a-zA-Z0-9-\\.]+\\.[a-zA-Z]{2,}(:(\\d{1,5}))?(\\/\\S*)?$"

time_dt
"pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$"

time
"pattern": "^[0-9]{10,13}$"

ip adress
"pattern": "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"

mac address
"pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"

email address
"pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"

any array of objects
"observables": {
	"type": "array",
	"items": {
		"type": "object",
		"required": [
			"name"
		],
		"minProperties": 1
	}
}

enum type_id compliments
"enum": [
	"str1",
	"str2",
	"str3",
	"str4",
],

geo coordinates
"pattern": "^\\[\\s*-?\\d+(\\.\\d+)?\\s*,\\s*-?\\d+(\\.\\d+)?\\s*\\]$"

iso countries
"pattern": "^[A-Z]{2}$"

iso regions
"pattern": "^[A-Z]{2}-[A-Z0-9-]+$"

protocol number
"pattern": "^(-1|[0-9]|[1-9][0-9]|[1-9][0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"

protocol version
"enum": [
	"Unknown",
	"Internet Protocol version 4 (IPv4)",
	"Internet Protocol version 6 (IPv6)",
	"Other"
				],
				
over version
"enum": [
	"1.0.0-rc.2",
	"1.1.0"
],

iso lang
"pattern": "^[a-z]{2}$"

http response codes
				"enum": [
					"100",
					"101",
					"200",
					"201",
					"202",
					"204",
					"206",
					"300",
					"301",
					"302",
					"303",
					"304",
					"307",
					"308",
					"400",
					"401",
					"403",
					"404",
					"405",
					"408",
					"409",
					"410",
					"429",
					"500",
					"501",
					"502",
					"503",
					"504",
					"505"
				]

add bounds to things like cvss
"pattern": "^10\\.0$|^[0-9](\\.[0-9])?$|^0\\.0$"

add class and type enums for dns queries/answers


adding regex to email objects
